{"version":3,"file":"middlewares/LamadaErrorHandler.js","mappings":";;;;;;;;;;AAEA,MAAM,kBAAkB;IACtB,MAAM,CAAC,KAAK,CAAC,GAAQ;QACnB,UAAU;QACV,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,GAAY,EAAE,IAAwB,EAAE,EAAE;YACvD,IAAI,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE;oBACtB,IAAI,EAAE,GAAG,CAAC,IAAI;oBACd,MAAM,EAAE,GAAG,CAAC,MAAM;oBAClB,OAAO,EAAE,GAAG,CAAC,OAAO;iBACrB,CAAC,CAAC;gBACH,MAAM,IAAI,EAAE,CAAC;gBACb,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE;oBACvB,MAAM,EAAE,GAAG,CAAC,MAAM;oBAClB,IAAI,EAAE,GAAG,CAAC,IAAI;iBACf,CAAC,CAAC;YACL,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC3B,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;gBACjB,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;YAChC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,SAAS;QACT,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,GAAY,EAAE,IAAwB,EAAE,EAAE;YACvD,MAAM,IAAI,EAAE,CAAC;YACb,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE,CAAC;gBACvB,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE;oBACnB,IAAI,EAAE,GAAG,CAAC,IAAI;oBACd,MAAM,EAAE,GAAG,CAAC,MAAM;oBAClB,GAAG,EAAE,GAAG,CAAC,GAAG;iBACb,CAAC,CAAC;gBACH,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;YACpD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,qBAAe,kBAAkB,CAAC","sources":["webpack://langchain-ai-agent/./src/middlewares/LamadaErrorHandler.ts"],"sourcesContent":["import Koa, { Context } from \"koa\";\n\nclass LamadaErrorHandler {\n  static error(app: Koa) {\n    // 错误处理中间件\n    app.use(async (ctx: Context, next: () => Promise<any>) => {\n      try {\n        console.log('Request:', {\n          path: ctx.path,\n          method: ctx.method,\n          headers: ctx.headers\n        });\n        await next();\n        console.log('Response:', {\n          status: ctx.status,\n          body: ctx.body\n        });\n      } catch (e) {\n        console.error('Error:', e);\n        ctx.status = 500;\n        ctx.body = { error: '服务器错误' };\n      }\n    });\n\n    // 404 处理\n    app.use(async (ctx: Context, next: () => Promise<any>) => {\n      await next();\n      if (ctx.status === 404) {\n        console.warn('404:', {\n          path: ctx.path,\n          method: ctx.method,\n          url: ctx.url\n        });\n        ctx.body = { error: 'Not Found', path: ctx.path };\n      }\n    });\n  }\n}\n\nexport default LamadaErrorHandler;"],"names":[],"sourceRoot":""}