{"version":3,"file":"agents/en-agent.js","mappings":";;;;;;;;;;;AAmDE,gCAAU;AACV,0CAAe;AACf,8CAAiB;AArDnB,6CAAmD;AACnD,8CAAuE;AACvE,4CAAmC;AACnC,6CAAqD;AACrD,kDAA4D;AAkD1D,+FAlDO,6BAAa,QAkDP;AAhDf,MAAM,KAAK,GAAG,IAAI,uBAAY,CAAC;IAC7B,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB;IACpC,WAAW,EAAE,GAAG;IAChB,SAAS,EAAE,eAAe;IAC1B,SAAS,EAAE,IAAI;CAChB,CAAC,CAAC;AAEH,MAAM,KAAK,GAAG,gBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEjC,MAAM,iBAAiB,GAAG,CAAC,UAAkB,EAAE,EAAE;IAC/C,MAAM,OAAO,GAAG,8BAAU,EAAC,UAAU,CAAC,CAAC;IACvC,OAAO,OAAQ,CAAC,OAAO,CAAC;AAC1B,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,IAAI,sCAA0B,CAAC;IACtD,QAAQ,EAAE,KAAK;IACf,iBAAiB,EAAE,iBAAiB;IACpC,gBAAgB,EAAE,OAAO;IACzB,kBAAkB,EAAE,iBAAiB;CACtC,CAAC,CAAC;AAyBD,4CAAgB;AAvBlB,KAAK,UAAU,UAAU,CAAC,SAAiB;IACzC,MAAM,YAAY,GAAG,IAAI,oBAAS,CAChC,6GAA6G,CAC9G,CAAC;IACF,MAAM,OAAO,GAAG,8BAAU,EAAC,SAAS,CAAC,CAAC;IACtC,MAAM,OAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,OAAiB,CAAC,CAAC;IACpE,OAAO,YAAY,CAAC;AACtB,CAAC;AAED,KAAK,UAAU,eAAe,CAAC,SAAiB;IAC9C,MAAM,OAAO,GAAG,8BAAU,EAAC,SAAS,CAAC,CAAC;IACtC,MAAM,OAAO,GAAG,OAAQ,CAAC,OAAO,CAAC;IACjC,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7C,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,KAAK,UAAU,iBAAiB,CAAC,SAAiB;IAChD,MAAM,OAAO,GAAG,8BAAU,EAAC,SAAS,CAAC,CAAC;IACtC,MAAM,OAAO,GAAG,OAAQ,CAAC,OAAO,CAAC;IACjC,MAAM,OAAO,CAAC,KAAK,EAAE,CAAC;AACxB,CAAC","sources":["webpack://langchain-ai-agent/./src/agents/en-agent.ts"],"sourcesContent":["import { ChatDeepSeek } from \"@langchain/deepseek\";\nimport { RunnableWithMessageHistory } from \"@langchain/core/runnables\";\nimport { prompt } from \"./prompts\";\nimport { AIMessage } from \"@langchain/core/messages\";\nimport { deleteSession, getSession } from \"./chainSessions\";\n\nconst model = new ChatDeepSeek({\n  apiKey: process.env.DEEPSEEK_API_KEY,\n  temperature: 0.7,\n  modelName: \"deepseek-chat\",\n  streaming: true,\n});\n\nconst chain = prompt.pipe(model);\n\nconst getMessageSession = (_sessionId: string) => {\n  const session = getSession(_sessionId);\n  return session!.history;\n};\n\nconst chainWithHistory = new RunnableWithMessageHistory({\n  runnable: chain,\n  getMessageHistory: getMessageSession,\n  inputMessagesKey: \"input\",\n  historyMessagesKey: \"history_message\",\n});\n\nasync function createTalk(sessionId: string) {\n  const firstMessage = new AIMessage(\n    \"Hello, I'm JO, your English learning assistant, and today we can talk about something you're interested in.\"\n  );\n  const session = getSession(sessionId);\n  await session!.history.addAIMessage(firstMessage.content as string);\n  return firstMessage;\n}\n\nasync function getHistoryTalks(sessionId: string) {\n  const session = getSession(sessionId);\n  const history = session!.history;\n  const messages = await history.getMessages();\n  return messages;\n}\n\nasync function clearHistoryTalks(sessionId: string) {\n  const session = getSession(sessionId);\n  const history = session!.history;\n  await history.clear();\n}\n\nexport {\n  chainWithHistory,\n  createTalk,\n  getHistoryTalks,\n  clearHistoryTalks,\n  deleteSession,\n};\n"],"names":[],"sourceRoot":""}