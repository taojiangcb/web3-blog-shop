{"version":3,"file":"app.js","mappings":";;;;;;;;;;;;;AAAA,2DAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,yDAAsB;AAEtB,0DAA6B;AAC7B,oEAAwC;AAExC,kEAA6C;AAC7C,wEAAkE;AAClE,MAAM,GAAG,GAAG,IAAI,aAAG,EAAE,CAAC;AAEtB,UAAU;AACV,GAAG,CAAC,GAAG,CAAC,kBAAI,GAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,4BAAU,GAAE,CAAC,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,uBAAM,CAAC,MAAM,EAAE,CAAC,CAAC;AACzB,4BAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAE9B,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACpB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC;AAEH,qBAAe,GAAG,CAAC","sources":["webpack://langchain-ai-agent/./src/app.ts"],"sourcesContent":["import dotenv from \"dotenv\";\ndotenv.config();\n\nimport Koa from \"koa\";\n\nimport cors from \"@koa/cors\";\nimport bodyParser from \"koa-bodyparser\";\n\nimport router from \"./routers/ApiController\";\nimport LamadaErrorHandler from \"./middlewares/LamadaErrorHandler\";\nconst app = new Koa();\n\n// 添加基础中间件\napp.use(cors());\napp.use(bodyParser());\n\napp.use(router.routes());\nLamadaErrorHandler.error(app);\n\napp.listen(3000, () => {\n  console.log(\"thie bff server started\");\n  console.log(\"http://localhost:3000\");\n});\n\nexport default app;\n"],"names":[],"sourceRoot":""}